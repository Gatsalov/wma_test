{"version":3,"sources":["img/preloader.svg","img/Welcome.jpg","components/Input.js","components/Button.js","js/check.js","components/Form.js","components/Preloader.js","components/Welcome.js","components/Logout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Input","_ref","type","placeholder","customClass","commonClass","value","inputHandler","react_default","a","createElement","className","onChange","name","Button","clickHandler","onClick","check","form","user","state","errorFlag","_form$elements","Object","slicedToArray","elements","loginPlace","passwordPlace","key","forEach","elem","classList","add","remove","login","password","Form","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","authWrongFlag","inherits","createClass","e","setState","defineProperty","target","indexOf","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","document","querySelectorAll","Symbol","iterator","next","done","err","return","_this2","_this$props","props","submited","auth","_this$state","preventDefault","setTimeout","_this$state2","onSubmit","submit","bind","components_Input","components_Button","Component","Preloader","src","loader","alt","Welcome","Fade_default","top","welcome","Logout","logout","href","App","preloaderFlag","logoutShowenFlag","welcomeShownFlag","formShownFlag","self","components_Logout","components_Preloader","src_components_Form","authSucces","changeSubmitedState","src_components_Welcome","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cdf761de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.edb5be20.svg\";","module.exports = __webpack_public_path__ + \"static/media/Welcome.02fc649d.jpg\";","import React from 'react';\nimport './Input.css';\n\nfunction Input( { type, placeholder, customClass, commonClass, value, inputHandler } ){\n  return(\n      <div>\n        <input \n          type={ type } \n          placeholder={ placeholder } \n          className={ customClass + commonClass} \n          value={ value } \n          onChange={ inputHandler }\n          name={ customClass }/>\n      </div>\n    )\n}\n\nexport default Input;","import React from 'react';\nimport './Button.css';\n\nfunction Button({ value, clickHandler }){\n  return (\n      <div className='button-wrap flex-r'>\n        <input type='submit' value={ value } className='submit' onClick={ clickHandler }/>\n      </div>\n    )\n}\nexport default Button;","let check = (form, user, state)=>{\n\n  let errorFlag = false,\n      [loginPlace, passwordPlace] = form.elements;\n  \n  for(let key in user){\n    if(user[key] !== state[key]){\n       errorFlag = true;\n    }\n  }\n\n  if(errorFlag){\n    [ loginPlace, passwordPlace ].forEach((elem)=>{\n      elem.classList.add('inputWrongHighlight')\n    })\n  }else{\n    [ loginPlace, passwordPlace ].forEach((elem)=>{\n      elem.classList.remove('inputWrongHighlight')\n    })\n  }\n  return errorFlag\n}\n\nexport default check","import React, { Component } from 'react';\nimport Input from './Input';\nimport Button from './Button';\nimport check from '../js/check'\nimport './Form.css';\n\nlet user = {\n  login: 'test',\n  password: 'test'\n}\n\nexport class Form extends Component {\n  \n  state = {\n    login: '',\n    password: '',\n    authWrongFlag: false\n  };\n\n  inputHandler(e){\n    this.setState({[e.target.name]: e.target.value});\n    if(e.target.classList.value.indexOf('inputWrongHighlight') !== -1){\n      for(let item of document.querySelectorAll('.inputForm')){\n        item.classList.remove('inputWrongHighlight')\n      }\n    }\n  }\n\n  submit(e){\n    let { submited, auth } = this.props;\n    let { login, password } = this.state;\n    e.preventDefault();\n    let form = e.target;\n    \n    if(login || password){\n      submited();\n      setTimeout(() => {\n        submited();\n        this.setState({ authWrongFlag: check(form, user, this.state) })\n        if(!this.state.authWrongFlag){\n          auth()\n        }\n      }, 3000)\n    }\n  }\n\n  render() {\n    let { login, password, authWrongFlag } = this.state;\n    let className = !authWrongFlag ? 'form-container' : 'form-container authWrong';\n\n    return (\n      <div className={className}>\n        <form onSubmit={ this.submit.bind(this) }>\n          <Input type='text' placeholder='Логин' customClass='login' commonClass=' inputForm' value={ login } inputHandler={this.inputHandler.bind(this)} />\n          <Input type='password' placeholder='Пароль' customClass='password' commonClass=' inputForm' value={ password } inputHandler={this.inputHandler.bind(this)} />\n          <Button value='Войти'/>\n        </form>\n      </div>\n    );\n  }\n}\nexport default Form;\n","import React from 'react';\nimport './Preloader.css';\nimport loader from '../img/preloader.svg';\n\nfunction Preloader (){\n  return(\n      <div className='preloader'>\n        <img src={loader} className=\"loader\" alt=\"loader\"/>\n      </div>\n    )\n}\n\nexport default Preloader;","import React from 'react';\nimport Fade from 'react-reveal/Fade';\nimport welcome from '../img/Welcome.jpg';\nimport './Welcome.css';\n\nfunction Welcome(){\n  return(\n    <div className='welcomeWrap'>\n      <Fade top>\n        <h1> Добро пожаловать</h1>\n        <img src={welcome} className='welcomeImg'/>\n      </Fade>\n    </div>\n    )\n}\nexport default Welcome;","import React from 'react';\nimport './Logout.css'\n\nfunction Logout( { logout } ){\n  let signOut = (e)=>{\n    e.preventDefault()\n    logout()\n  }\n  return(\n      <div className='logout'>\n        <a href=\"#\" onClick={signOut}>Выход</a>\n      </div>\n    )\n}\n\nexport default Logout;","import React, { Component } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport Preloader from './components/Preloader';\nimport Welcome from './components/Welcome';\nimport Logout from './components/Logout';\n\nclass App extends Component {\n  state = {\n    preloaderFlag: true,\n    submited: false,\n    logoutShowenFlag: false,\n    welcomeShownFlag: false,\n    formShownFlag: false\n  }\n\n  changeSubmitedState(){\n    this.setState({ submited: !this.state.submited})\n  }\n\n  authSucces(){\n    this.setState({ \n      logoutShowenFlag: true,\n      welcomeShownFlag: true,\n      formShownFlag: false\n    })\n  }\n\n  logout(){\n    this.setState({ \n      logoutShowenFlag: false,\n      welcomeShownFlag: false,\n      formShownFlag: true\n    })\n  }\n\n  render(){\n    const self = this;\n    setTimeout(()=>{\n      self.setState({\n        preloaderFlag: false, \n        formShownFlag: true\n      })\n    }, 5000)\n    \n     return (\n      <div className=\"App\">\n         { this.state.logoutShowenFlag ? <Logout logout={this.logout.bind(this)}/> : null}\n         { this.state.preloaderFlag ? <Preloader/> : null} \n         { this.state.formShownFlag && !this.state.welcomeShownFlag ? <Form auth={this.authSucces.bind(this)} submited={this.changeSubmitedState.bind(this)}/> : null}\n         { this.state.submited ? <Preloader/> : null }\n         { this.state.welcomeShownFlag ? <Welcome/> : null }\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}